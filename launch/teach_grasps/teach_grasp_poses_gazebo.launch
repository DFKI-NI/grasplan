<?xml version="1.0"?>
<launch>

  <!-- Launch simulated mobipick gripper in gazebo, moveit around, press enter to record poses, gen yaml file when q is pressed -->

  <arg name="object_name" default="relay" />
  <arg name="gripper" default="robotiq_arg2f" />
  <arg name="object_roll" default="0.0" /> <!--for multimeter use 1.5708, for relay use 0.0-->
  <!-- publish 6dof twist with spacenav joystic if required (you need a 3D mouse to run this) -->
  <arg name="spacenav_node_required" default="true" />
  <arg name="gripper_z" value="0.8" />

  <!-- bringup robot gripper in a zero gravity environment -->
  <include file="$(find mobipick_gazebo)/launch/robotiq_2f_140/robotiq_2f_140_floating.gazebo.launch">
    <arg name="start_paused" value="false" />
    <arg name="gripper_z" value="$(arg gripper_z)" />
    <arg name="gripper_roll" value="3.1415" />
  </include>

  <!-- publish robot world to gripper root_link transform taken from gazebo ground truth -->
  <arg name="gripper_root_link" default="robotiq_arg2f/gripper_robotiq_arg2f_base_link" />
  <node pkg="grasplan" type="link_tf_gt_publisher.py" name="link_tf_gt_publisher" required="true">
    <param name="prefix" type="string" value="$(arg gripper)::" />
    <param name="link_name" type="string" value="$(arg gripper_root_link)" />
  </node>

  <!-- spawn object in gazebo world -->
  <param name="$(arg object_name)"
         command="$(find xacro)/xacro '$(find mobipick_gazebo)/urdf/static/static_$(arg object_name).urdf.xacro'" />
  <node name="spawn_$(arg object_name)" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param $(arg object_name) -model $(arg object_name) -x 0.0 -y 0.0 -z 0.5 -R $(arg object_roll)"
        respawn="false" output="screen" />

  <!-- fake object recognition: get object ground truth from gazebo -->
  <node pkg="grasplan" type="object_recognition_mockup.py" name="object_recognition" output="log">
    <!-- field of view box parameters -->
    <param name="box_width" type="double" value="1.0" />
    <param name="box_length" type="double" value="1.0" />
    <param name="box_height" type="double" value="1.0" />
    <param name="x_box_position" type="double" value="0.0" />
    <param name="y_box_position" type="double" value="0.0" />
    <param name="z_box_position" type="double" value="0.5" />
    <param name="supress_warnings" type="bool" value="true" />
    <param name="broadcast_object_tf" type="bool" value="true" />
    <param name="objects_desired_reference_frame" type="string" value="world" />
    <!-- objects bounding box parameters -->
    <rosparam file="$(find grasplan)/config/examples/object_bounding_boxes.yaml" command="load"/>
  </node>

  <!-- perception persistent trigger -->
  <arg name="node_start_delay" default="5.0" />
  <node pkg="rostopic" type="rostopic" name="fake_obj_recognition_trigger" args="pub -r 10 /object_recognition/event_in std_msgs/String 'data: '"
        launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>

  <!-- optional 3D mouse to move gripper in 6D -->
  <group if="$(arg spacenav_node_required)">
    <node pkg="spacenav_node" type="spacenav_node" name="spacenav_node" output="screen">
      <remap from="spacenav/twist" to="/robotiq_arg2f/cmd_vel"/>
      <remap from="spacenav/joy" to="/joy"/>
      <param name="zero_when_static" type="bool" value="false" />
      <rosparam param="linear_scale">[1, 1, 1]</rosparam>
      <rosparam param="angular_scale">[1, 1, 1]</rosparam>
    </node>
  </group>

  <!-- tf recorder: record tf between gripper end effector link and object tf -->
  <arg name="end_effector_link" default="$(arg gripper)/gripper_tcp" />
  <node pkg="grasplan" type="tf_gripper_listener.py" name="tf_gripper_listener" output="screen" required="true" >
    <param name="file_path" value="$(find mobipick_pick_n_place)/config/grasplan/object_grasps/handcoded_grasp_planner_$(arg object_name).yaml" />
    <param name="end_effector_link" value="$(arg end_effector_link)" />
    <param name="object_ref_frame" value="$(arg object_name)" />
  </node>

  <!-- rviz -->
  <arg name="rviz" default="true" />
  <group if="$(arg rviz)">
    <node pkg="rviz" type="rviz" name="rviz"
          args="--display-config $(find grasplan)/config/rviz/teach_grasp_poses.rviz" />
  </group>

</launch>
